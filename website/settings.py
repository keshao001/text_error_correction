"""
Django settings for website website.

Generated by 'django-admin startproject' using Django 3.2.8.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""
import os
from pathlib import Path

# Build paths inside the website like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-tp!-oba8k_&by9pw3twb9gnt!2p*llm+q$b0*g!m9k+@myc@e+'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ['*']

# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'index',
    'user',
]

# 中间件
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# project需修改项目名称
ROOT_URLCONF = 'website.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# TODO
# project需修改项目名称
WSGI_APPLICATION = 'website.wsgi.application'

#  数据库配置信息
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'text_error_correction',
        'USER': 'root',
        'PASSWORD': '111111',
        'HOST': '127.0.0.1',
        'PORT': '3306'
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


#  系统语言
LANGUAGE_CODE = 'zh-hans'

#  系统时区
TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

CORS_ORIGIN_ALLOW_ALL = True  # 允许所有域名跨域(优先选择)
CORS_ALLOW_CREDENTIALS = True  # 允许携带cookie:
# 配置管理平台样式
SIMPLEUI_CONFIG = {
    # 是否使用系统默认菜单，自定义菜单时建议关闭。
    'system_keep': False,

    # 用于菜单排序和过滤, 不填此字段为默认排序和全部显示。空列表[] 为全部不显示.
    'menu_display': ['权限认证', '课程管理', '学生管理', '用户管理'],

    # 设置是否开启动态菜单, 默认为False. 如果开启, 则会在每次用户登陆时刷新展示菜单内容。
    # 一般建议关闭。
    'dynamic': False,
    'menus': [
        {
            'app': 'auth',
            'name': '权限认证',
            'icon': 'fas fa-user-shield',
            'models': [
                {
                    'name': '用户列表',
                    'icon': 'fa fa-user',
                    'url': 'auth/user/'
                },
                {
                    'name': '用户组',
                    'icon': 'fa fa-th-list',
                    'url': 'auth/group/'
                }
            ]
        },
        {
            'name': '管理',
            'icon': 'fa fa-car',
            'models': [
                {
                    'name': '列表',
                    # 注意url按'/admin/应用名小写/模型名小写/'命名。
                    'url': '/admin/user/course',
                    'icon': 'fa fa-car'
                },

            ]
        },
        {
            'name': '管理',
            'icon': 'fa fa-th-list',
            'models': [
                {
                    'name': '列表',
                    # 注意url按'/admin/应用名小写/模型名小写/'命名。
                    'url': '/admin/user/teacher',
                    'icon': 'fa fa-user'
                },

            ]
        },
        {
            'name': '管理',
            'icon': 'fa fa-th-list',
            'models': [
                {
                    'name': '列表',
                    # 注意url按'/admin/应用名小写/模型名小写/'命名。
                    'url': '/admin/user/banji',
                    'icon': 'fa fa-image'
                },

            ]
        },
        {
            'name': '管理',
            'icon': 'fa fa-th-list',
            'models': [
                {
                    'name': '列表',
                    # 注意url按'/admin/应用名小写/模型名小写/'命名。
                    'url': '/admin/user/xueyuan',
                    'icon': 'fa fa-image'
                },

            ]
        },
      

        {
            'name': '用户管理',
            'icon': 'fa fa-users',
            'models': [
                {
                    'name': '用户信息',
                    'url': '/admin/user/user',
                    'icon': 'fa fa-users'
                },

            ]
        },
    ]
}

# 配置静态文件路径
STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static')
]

# 上传图片地址
MEDIA_ROOT = os.path.join(BASE_DIR)

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
